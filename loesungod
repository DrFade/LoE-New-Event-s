using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using wServer.logic.behaviors;
using System.Threading.Tasks;
using wServer.logic.transitions;
using wServer.logic.loot;

namespace wServer.logic
{
    partial class BehaviorDb
    {
        _ Sun God = () => Behav()
        
          .Init("Sun God",
            new State(
              new State(
                new Wander(1.0),
                new Shoot(radius: 12, count: 7, angleOffset: 15 / 3, projectileIndex: //Addnumber, coolDown: 950),
                new Shoot(radius: 27, projectileIndex: //addnumber, count: 24, coolDown: 30000),
                new Taunt("Ha... ha.. you test me. Soon, you will learn),
                new Shoot(radius: 6.5, count: 4, shootAngle 40, projectileIndex: //addnumber, coolDown: 4000),
                new HpLessTransition(0.20, "You tiny mortal.  YOU TEST MY PATIENCE.  DIE BY FIRE!")
                
            ),
            new State("You tiny mortal.  YOU TEST MY PATIENCE.  DIE BY FIRE!",
                new ConditionalEffect(ConditionEffectIndex.Invulnerable),
                new Follow(2.0, acquireRange: 17, range: 20),
                new Shoot(radius: 20, count: 7, angleOffset: 20 / 3, projectileIndex: //addnumber, coolDown: 750, predictive 1.5),
                new HpLessTransition(0.60, "NOW, YOU WILL BEAR WITNESS TO A TRUE GOD.  DIE AT MY FEET!")
            ),
            new State("NOW, YOU WILL BEAR WITNESS TO A TRUE GOD.  DIE AT MY FEET!,
                new Wander(1.5),
                new Shoot(radius: 35, count: 16, angleOffset: 25 / 3, projectileIndex: //addnumber, coolDown: 550),
                new Shoot(radius: 18, projectileIndex: //addnumber, count: 12, coolDown: 30000),
                new Shoot(radius: 5, count: 20, shootAngle: 45, projectileIndex: //addnumber, coolDown: 500),
                new TimedTransition(4344, "You have beaten me this time... Next time you won't be so lucky...")
                
                
            new State("You have beaten me this time... Next time you won't be so lucky...",
                new Shoot(45, projectileIndex: //addnumber, count: 25),
                new Shoot(45, projectileIndex: //add(diff)number, count: 25),
                new Suicide()
                )
            ),
        new MostDamagers(7,
            new TierLoot(11, ItemType.Weapon, goodloot),
            new TierLoot(12, ItemType.Weapon, greatloot),
            new TierLoot(11, ItemType.Armor, normalloot),
            new TierLoot(12, ItemType.Armor, goodloot),
            new TierLoot(5, ItemType.Ring, goodloot),
            new TierLoot(6, ItemType.Ring, greatloot),
            new TierLoot(5, ItemType.Ability, goodloot),
            new TierLoot(6, ItemType.Ability, greatloot),
            new ItemLoot("KoalaPOW", awesomeloot)
            ),
        new MostDamagers(3,
            new OnlyOne(
                new ItemLoot("Staff of the Rising Sun", superbag),
                new ItemLoot("Thosuand Sun Spell", superbag),
                new ItemLoot("Robe of the Summer Solstice", superbag),
                new ItemLoot("Ring of the Burning Sun", superbag)
                    ),
                new ItemLoot("Mischeivous Imp Skin", awesomeloot),
                new ItemLoot("Wine Cellar Incantation", awesomeloot)
                
                )
                
        )
        
      .Init("Sun Minion",
              new State(
                  new Follow(2.0, acquireRange: 16, range: 12),
                  new Shoot(15, 4, 6, angleOffset: 24 / 3, projectileIndex: 0, coolDown: 180)
              ),
              new MostDamagers(5,
                    new OnlyOne(
                        new ItemLoot("KoalaPOW", awesomeloot)
                        ),
                        new TierLoot(7, ItemType.Weapon, poorloot),
                        new TierLoot(8, ItemType.Weapon, mediumloot),
                        new TierLoot(9, ItemType.Weapon, mediumloot),
                        new TierLoot(10, ItemType.Armor, mediumloot),
                        new TierLoot(8, ItemType.Armor, mediumloot),
                        new TierLoot(7, ItemType.Armor, poorloot)
                        )
                )
            ;
    }
}
